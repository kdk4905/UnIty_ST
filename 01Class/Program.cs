using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;


// 어느정도 프로그램을 배운사람이라면 처음부터 클래스 부터 배우지 않아도 되겠지만
// C#은 그럴수가 없다.
// C#은 굉장히 고지식한 객체지향 언어이기 때문.
// C#은 클래스의 노예이다.
// 모든길은 클래스로 통한다.
// 다른언어들은 안그런녀석들도 있는데.
// C#이라는 언어는 클래스를 설명하지 않고는
// 사실 무엇을 설명하는것이 불가능하다.

// ex 게임을 만든다
// 게임은 굉장히 다양한 개념들을 품고있다.

// RPG 게임의 구성요소
// 직업
// 몬스터
// 플레이어
// 레벨
// 체력 등등
class pet
{
}

class monster
{
    //내부의 내용은 중요하지 않다.
}

// 객체지향은 내가 쓸 개념을 적절히 묶어서 클래스화라는 것을 시킨다.
// 하나의 개념을 표현하는 것이 클래스

// 객체지향 프로그래밍의 가장 핵심적인 내용
// class(클래스를 선언하기 위한 키워드) 이름
// { <- 클래스의 내용의 시작.
// }

// 객체지향 -> 내가 표현하고 싶은걸 클래스로 만들어서
// 그 클래스로 객체를 만드는 프로그래밍이다.
// 객체를 기반으로 모든걸 해결하기 때문에
// 객체를 지향(향한다)할수 밖에 없는 프로그래밍

// 구현과 개념이 분리되지 않는다.
// 클래스란
// 내가 생각한 개념이
// 내 프로그램에서 사용되어 지기 위한
// 설계도를 의미하게 된다.
// 코딩에서는 무조건 설계도가 먼저다.
// 클래스 먼저, 그다음이 객체